buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}
apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    signingConfigs {
        release {
            storeFile file("tools/offprint.keystore")
            storePassword "jiecaodada"
            keyAlias "offprint"
            keyPassword "jiecaodada"
        }
    }
    buildTypes {
        release {
            zipAlign true
            runProguard true
            signingConfig signingConfigs.release
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-project.txt'
        }
    }

    productFlavors {
        official {
            packageName='com.jiecao.news.jiecaonews'
        }
        apk_one {
            packageName='com.yourcompanyname.a'
        }
        apk_two {
            packageName='com.yourcompanyname.b'
        }
        apk_three {
            packageName='com.yourcompanyname.c'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        // set your flavor resource directory for different apk build
        apk_one.setRoot('product/apk_one')
        apk_two.setRoot('product/apk_two')
        apk_three.setRoot('product/apk_three')

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    task copyNativeLibs(type: Copy) {
        from fileTree(dir: 'libs', include: '**/*.so') into 'build/native-libs'
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn copyNativeLibs
    }

    clean.dependsOn 'cleanCopyNativeLibs'

    tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
        pkgTask.jniFolders = new HashSet()
        pkgTask.jniFolders.add(new File(projectDir, 'build/native-libs'))
    }

    dexOptions {
        javaMaxHeapSize "3g"
    }
}
